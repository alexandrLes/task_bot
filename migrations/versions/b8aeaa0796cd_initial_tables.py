"""Initial tables

Revision ID: b8aeaa0796cd
Revises: 
Create Date: 2025-04-05 21:07:56.396599

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b8aeaa0796cd'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('role', sa.Enum('AUTHOR', 'EXECUTOR', name='userrole'), nullable=False),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('tasks',
    sa.Column('task_id', sa.String(length=36), nullable=False),
    sa.Column('author_id', sa.BigInteger(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('reward', sa.Float(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', 'REJECTED', name='taskstatus'), nullable=True),
    sa.Column('deadline', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('task_id')
    )
    op.create_table('feedbacks',
    sa.Column('feedback_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('from_user_id', sa.BigInteger(), nullable=False),
    sa.Column('to_user_id', sa.BigInteger(), nullable=False),
    sa.Column('task_id', sa.String(length=36), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['from_user_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.task_id'], ),
    sa.ForeignKeyConstraint(['to_user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('feedback_id')
    )
    op.create_table('task_assignments',
    sa.Column('assignment_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.String(length=36), nullable=False),
    sa.Column('executor_id', sa.BigInteger(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['executor_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.task_id'], ),
    sa.PrimaryKeyConstraint('assignment_id')
    )
    op.create_table('task_submissions',
    sa.Column('submission_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.String(length=36), nullable=False),
    sa.Column('executor_id', sa.BigInteger(), nullable=False),
    sa.Column('screenshot_url', sa.String(length=255), nullable=False),
    sa.Column('submitted_at', sa.DateTime(), nullable=True),
    sa.Column('rejection_reason', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['executor_id'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.task_id'], ),
    sa.PrimaryKeyConstraint('submission_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('task_submissions')
    op.drop_table('task_assignments')
    op.drop_table('feedbacks')
    op.drop_table('tasks')
    op.drop_table('users')
    # ### end Alembic commands ###
